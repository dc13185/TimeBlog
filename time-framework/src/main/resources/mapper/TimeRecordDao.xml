<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.timeblog.framework.mapper.TimeRecordDao">

    <resultMap type="com.timeblog.business.domain.TimeRecord" id="TimeRecordMap">
        <result property="recordId" column="record_id" jdbcType="INTEGER"/>
        <result property="recordTitle" column="record_title" jdbcType="VARCHAR"/>
        <result property="recordContext" column="record_context" jdbcType="VARCHAR"/>
        <result property="recordStartTime" column="record_start_time" jdbcType="TIMESTAMP"/>
        <result property="recordEndTime" column="record_end_time" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="eventType" column="event_type" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TimeRecordMap">
        select
         record_id, record_title, record_context, record_start_time,record_end_time, status,event_type
        from timeblog.time_record
        where record_id = #{recordId}
    </select>


    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TimeRecordMap">
        select
        record_id, record_title, record_context, record_start_time,record_end_time, status,event_type
        from timeblog.time_record
        limit #{offset}, #{limit}
    </select>



    <select id="queryAllByDate" resultMap="TimeRecordMap">
        select
          record_id, record_title, record_context, record_start_time,record_end_time, status,event_type
        from timeblog.time_record
    WHERE record_start_time &gt;= #{startDate}  AND record_end_time &lt;= #{endDate}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="TimeRecordMap">
        select
          record_id, record_title, record_context, record_time, status
        from timeblog.time_record
        <where>
            <if test="recordId != null">
                and record_id = #{recordId}
            </if>
            <if test="recordTitle != null and recordTitle != ''">
                and record_title = #{recordTitle}
            </if>
            <if test="recordContext != null and recordContext != ''">
                and record_context = #{recordContext}
            </if>
            <if test="recordTime != null">
                and record_time = #{recordTime}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="recordId" useGeneratedKeys="true">
        insert into timeblog.time_record(record_title, record_context, record_start_time,record_end_time, status,event_type)
        values (#{recordTitle}, #{recordContext}, #{recordStartTime},#{recordEndTime}, #{status},#{eventType})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update timeblog.time_record
        <set>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where record_id = #{recordId}
    </update>


    <select id="queryTodoRecord" resultMap="TimeRecordMap">
    select
          record_id, record_title, record_context, record_start_time,record_end_time, status,event_type
        from timeblog.time_record
    WHERE record_start_time &gt;= #{nowDate} and status = -1
    </select>


    <!--通过主键删除-->
    <delete id="deleteById">
        delete from timeblog.time_record where record_id = #{recordId}
    </delete>




    <select id="statisticsData" resultType="com.timeblog.business.domain.dto.StatisticsDto">
        SELECT uid AS eventType, MAX(days) days, MIN(login_day) startDate,MAX(login_day) endDate
        FROM (SELECT uid,
        @cont_day :=
        (CASE
        WHEN (@last_uid = uid AND DATEDIFF(login_dt, @last_dt)=1) THEN
        (@cont_day + 1)
        WHEN (@last_uid = uid AND DATEDIFF(login_dt, @last_dt)&lt;1) THEN
        (@cont_day + 0)
        ELSE
        1
        END) AS days,
        (@cont_ix := (@cont_ix + IF(@cont_day = 1, 1, 0))) AS cont_ix,
        @last_uid := uid,
        @last_dt := login_dt login_day
        FROM (SELECT event_type AS uid, DATE(record_start_time) AS login_dt
        FROM time_record
        <where>
            <if test="event_type != null">
                and event_type = #{eventType}
            </if>
        </where>
        ORDER BY event_type, record_start_time) AS t,
        (SELECT @last_uid := '',
        @last_dt  := '',
        @cont_ix  := 0,
        @cont_day := 0) AS t1) AS t2
        GROUP BY uid, cont_ix;

    </select>




</mapper>
